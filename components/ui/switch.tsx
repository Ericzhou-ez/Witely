"use client\"\n\nimport * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\n/**\n * A customizable toggle switch built with Radix UI and Tailwind CSS.\n *\n * This component provides a toggle switch UI element that can be controlled\n * via the `checked` prop and `onCheckedChange` callback. It supports all props\n * from Radix UI's Switch Root component.\n *\n * @example\n * ```tsx\n * <Switch checked={isToggled} onCheckedChange={setIsToggled} />\n * ```\n *\n * @param className - Additional CSS classes to apply to the switch.\n * @param props - Standard props for the Radix UI Switch Root component.\n * @param ref - Ref forwarded to the underlying Radix UI Switch Root.\n */\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => {\n  const { 'data-testid': dataTestid, ...restProps } = props;\n  return (\n    <SwitchPrimitives.Root\n      className={cn(\n        \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n        className\n      )}\n      data-testid={dataTestid || 'switch'}\n      {...restProps}\n      ref={ref}\n    >\n      <SwitchPrimitives.Thumb\n        className={cn(\n          \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n        )}\n      />\n    </SwitchPrimitives.Root>\n  )\n})\n\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n"